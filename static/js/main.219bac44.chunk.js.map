{"version":3,"sources":["components/header.js","components/generalInformationDisplay.js","components/generalInformationForm.js","components/educationDisplay.js","components/educationForm.js","components/workExperienceDisplay.js","components/workExperienceForm.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","target","rel","Component","GeneralDisplay","this","props","firstName","lastName","email","phoneNumber","onClick","changeisSubmitted","GeneralForm","handleSubmit","event","preventDefault","handleInputChange","setState","name","value","state","isSubmitted","bind","onSubmit","type","onChange","required","EducationDisplay","educationArray","map","n","schoolName","removeElement","degree","startDate","graduationDate","id","EducationForm","appendingEducation","changeAppendingEducation","length","pop","entryLocation","findIndex","obj","splice","min","max","WorkExperienceDisplay","workArray","companyName","position","description","endDate","Work","appendingWork","changeAppendingWork","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.219bac44.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nclass Header extends Component {\r\n render() {\r\n      return <div className='header'>\r\n        <h1>C.V Builder</h1>\r\n        <a href=\"https://github.com/jerrytnutt\" target=\"_blank\" rel=\"noreferrer\"  >\r\n        <div className='gitImg' ></div>\r\n        </a>\r\n      </div>\r\n    }\r\n  }\r\nexport default Header","import React, {Component} from 'react'\r\n\r\nclass GeneralDisplay extends Component{\r\n    render(){\r\n      return(\r\n            <div className='infoContainer'>\r\n            <div className='outerBox'>\r\n              <div className='innerBox'>\r\n                <h3>First Name</h3>\r\n                  <div className='description'>{this.props.firstName} </div>\r\n              </div>\r\n              <div className='innerBox'>\r\n                <h3>Last Name</h3>\r\n                <div className='description'>{this.props.lastName} </div>\r\n              </div>\r\n            </div>\r\n\r\n            <h3>E-mail</h3>\r\n            <div className='description'> {this.props.email} </div>\r\n            <h3>Phone Number</h3>\r\n            <div className='description'>{this.props.phoneNumber}</div>\r\n            <button className='editButton' onClick={this.props.changeisSubmitted}>Edit</button>\r\n             \r\n        </div>\r\n            )\r\n        \r\n    }\r\n}\r\nexport default GeneralDisplay","import React, {Component} from 'react'\r\nimport GeneralDisplay from '../components/generalInformationDisplay'\r\n\r\nclass GeneralForm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            isSubmitted: false,\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            phoneNumber: ''\r\n        }\r\n        this.changeisSubmitted = this.changeisSubmitted.bind(this);\r\n        \r\n    }\r\n    changeisSubmitted() {\r\n      this.setState({\r\n        isSubmitted: !this.state.isSubmitted\r\n        })\r\n \r\n    }\r\n    handleSubmit = (event) => {\r\n      event.preventDefault(event)\r\n      this.changeisSubmitted()\r\n\r\n   }\r\n   handleInputChange = (event) => {\r\n    event.preventDefault(event)\r\n    this.setState({\r\n        [event.target.name]: event.target.value\r\n    })   \r\n}\r\n    render(){\r\n        if (!this.state.isSubmitted){\r\n        return(\r\n            <div className='infoContainer'>\r\n              <form onSubmit={this.handleSubmit}>\r\n                <div className='outerBox'>\r\n                  <div className='innerBox'>\r\n                  <label>\r\n                    <h2>First Name:</h2>\r\n                    <input type='text' value={this.state.firstName} name='firstName' onChange={this.handleInputChange} required></input>\r\n                  </label>\r\n                  </div>\r\n\r\n                  <div className='innerBox'>\r\n                  <label>\r\n                    <h2>Last Name:</h2>\r\n                    <input type='text' value={this.state.lastName} name='lastName' onChange={this.handleInputChange} required></input>\r\n                  </label>\r\n                  </div>\r\n                  \r\n                </div>\r\n                  <label>\r\n                <h2>E-mail:</h2>\r\n                <input type='text' value={this.state.email} name='email' onChange={this.handleInputChange} required></input>\r\n                  </label>\r\n                  \r\n                  <label>\r\n                <h2>Phone Number:</h2>\r\n                <input type='text' value={this.state.phoneNumber} name='phoneNumber' onChange={this.handleInputChange} required></input>\r\n                  </label>\r\n                <div>\r\n                <button className='submit'>Submit</button>\r\n                </div> \r\n                </form>\r\n            </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div className='infoContainer'>\r\n                  <GeneralDisplay\r\n                  firstName = {this.state.firstName} \r\n                  lastName = {this.state.lastName}\r\n                  email = {this.state.email}  \r\n                  phoneNumber = {this.state.phoneNumber}\r\n                  changeisSubmitted={this.changeisSubmitted}/>\r\n                  \r\n            </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\nexport default GeneralForm","import React, {Component} from 'react'\r\n\r\nclass EducationDisplay extends Component{\r\n    render(){\r\n        return(\r\n            \r\n            <div>\r\n            {this.props.educationArray.map((n) =>  \r\n              <div key={n.id}>\r\n                <button className='remove' value={n.schoolName} onClick={this.props.removeElement}>X</button> \r\n\r\n                <h3>School Name</h3>\r\n                <div className='description'>{n.schoolName}</div>\r\n                <h3>Degree</h3>\r\n                <div className='description' >{n.degree}</div>\r\n            \r\n                <div className='outerBox'>\r\n\r\n                 <div className='innerBox'>\r\n                   <h3>Start date</h3>\r\n                   <div className='description'>{n.startDate}</div>\r\n                </div>\r\n                 <div className='innerBox'>\r\n                   <h3>Graduation Date</h3>\r\n                  <div className='description'>{n.graduationDate}</div>\r\n               </div>\r\n            \r\n            </div>\r\n            <div className='buttonContainer'>\r\n            </div>\r\n            </div>)}\r\n  </div>\r\n            )\r\n        \r\n    }\r\n}\r\nexport default EducationDisplay","import React, {Component} from 'react'\r\nimport EducationDisplay from '../components/educationDisplay'\r\n\r\nclass EducationForm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            appendingEducation: false,\r\n            id: 0,\r\n            schoolName: '',\r\n            degree: '',\r\n            startDate: '',\r\n            graduationDate: '',\r\n            educationArray: [],\r\n        }\r\n        \r\n        this.changeAppendingEducation = this.changeAppendingEducation.bind(this);\r\n        this.removeElement = this.removeElement.bind(this);\r\n \r\n    }\r\n    changeAppendingEducation() {\r\n        this.setState({\r\n            appendingEducation: !this.state.appendingEducation\r\n        })\r\n    }\r\n    \r\n    handleSubmit = (event) => {\r\n        event.preventDefault(event)\r\n        this.setState({\r\n            appendingEducation: false,\r\n            id: this.state.id + 1,\r\n            educationArray:[...this.state.educationArray, {id: this.state.id,schoolName: this.state.schoolName,\r\n            degree: this.state.degree, graduationDate: this.state.graduationDate,startDate: this.state.startDate}]\r\n        })\r\n        \r\n    }\r\n    handleInputChange = (event) => {\r\n        event.preventDefault(event)\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    removeElement(event) {\r\n        if (this.state.educationArray.length === 1){\r\n            this.state.educationArray.pop()\r\n        }\r\n        let entryLocation = event.target.value\r\n        entryLocation = this.state.educationArray.findIndex(obj => obj.schoolName === entryLocation)\r\n        this.state.educationArray.splice(entryLocation, 1)\r\n        this.setState({\r\n            educationArray: this.state.educationArray\r\n        })\r\n       \r\n}\r\n    \r\n    render(){\r\n        if (this.state.appendingEducation){\r\n        return(\r\n            <div className='infoContainer'>\r\n                <EducationDisplay\r\n                educationArray = {this.state.educationArray}\r\n                removeElement={this.removeElement} />\r\n                \r\n        <form onSubmit={this.handleSubmit}>\r\n            <label>\r\n          <h2>School Name:</h2>\r\n          <input type='text'  value={this.state.schoolName} name='schoolName' onChange={this.handleInputChange} required></input>\r\n            </label>\r\n            <label>\r\n        <h2>Degree:</h2>\r\n        <input type='text' value={this.state.degree} name='degree' onChange={this.handleInputChange} required></input>\r\n            </label>\r\n\r\n            <div className='outerBox'>\r\n              <div className='innerBox'>\r\n              <label>\r\n              <h2>Start date:</h2>\r\n              <input type=\"date\" value={this.state.startDate} name='startDate' onChange={this.handleInputChange}\r\n               min=\"1950-01-01\" max=\"2028-12-31\" required></input>\r\n               </label>\r\n                </div>\r\n           <div className='innerBox'>\r\n                <label>\r\n              <h2>Graduation date:</h2>\r\n              <input type=\"date\" value={this.state.graduationDate} name='graduationDate' onChange={this.handleInputChange} id=\"grad\" \r\n              min=\"1950-01-01\" max=\"2028-12-31\" required></input>\r\n               </label>\r\n            </div>\r\n            </div>\r\n\r\n            <button className='submit' >Submit</button>\r\n             </form>\r\n    </div>\r\n        )\r\n        }else{\r\n            return(\r\n             <div className='infoContainer'> \r\n              <EducationDisplay\r\n                educationArray = {this.state.educationArray} \r\n                removeElement={this.removeElement}/>\r\n\r\n              <div className='addButtonContainer'>\r\n              <button className='add' onClick={this.changeAppendingEducation}>Add</button>\r\n              <p>Append New Education</p></div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default EducationForm","import React, {Component} from 'react'\r\n\r\nclass WorkExperienceDisplay extends Component{\r\n   render(){\r\n        return(\r\n            <div>\r\n            {this.props.workArray.map((n) =>  \r\n              <div key={n.id} >\r\n                <button className='remove' value={n.companyName} onClick={this.props.removeElement}>X</button> \r\n\r\n                <h3>Company Name</h3>\r\n                <div className='description'>{n.companyName}</div>\r\n                <h3>Position</h3>\r\n                <div className='description' >{n.position}</div>\r\n                <h3>Description of Duty</h3>\r\n                <div className='descriptionOfDuty' >{n.description}</div>\r\n\r\n                 <div className='outerBox'>\r\n                  <div className='innerBox'>\r\n                    <h3>Start date</h3>\r\n                    <div className='description'>{n.startDate}</div>\r\n                  </div>\r\n                  <div className='innerBox'>\r\n                    <h3>End date</h3>\r\n                    <div className='description'>{n.endDate}</div>\r\n                  </div>\r\n                 </div>\r\n\r\n              </div>)}\r\n  </div>\r\n            )\r\n        \r\n    }\r\n}\r\nexport default WorkExperienceDisplay","import React, {Component} from 'react'\r\nimport WorkExperienceDisplay from '../components/workExperienceDisplay'\r\n\r\nclass Work extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            appendingWork: false,\r\n            id: 0,\r\n            companyName: '',\r\n            position: '',\r\n            description: '',\r\n            startDate: '',\r\n            endDate: '',\r\n            workArray: [],\r\n        }\r\n        \r\n        this.changeAppendingWork = this.changeAppendingWork.bind(this);\r\n        this.removeElement = this.removeElement.bind(this)\r\n    }\r\n    changeAppendingWork() {\r\n      this.setState({\r\n        appendingWork: !this.state.appendingWork\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault(event)\r\n        this.setState({\r\n            appendingWork: false,\r\n            id: this.state.id + 1,\r\n            workArray:[...this.state.workArray, {id: this.state.id,companyName: this.state.companyName,\r\n            position: this.state.position,description: this.state.description, startDate: this.state.startDate,endDate: this.state.endDate}]\r\n        })\r\n        \r\n    }\r\n    handleInputChange = (event) => {\r\n        event.preventDefault(event)\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    removeElement(event) {\r\n        if (this.state.workArray.length === 1){\r\n            this.state.workArray.pop()\r\n        }\r\n        let entryLocation = event.target.value\r\n        entryLocation = this.state.workArray.findIndex(obj => obj.companyName === entryLocation)\r\n        this.state.workArray.splice(entryLocation, 1)\r\n        this.setState({\r\n            workArray: this.state.workArray\r\n        })\r\n       \r\n}\r\n    render(){\r\n        if (this.state.appendingWork){\r\n        return(\r\n          <div className='infoContainer'>\r\n            <WorkExperienceDisplay\r\n              workArray = {this.state.workArray}\r\n              removeElement={this.removeElement} />\r\n                \r\n        <form onSubmit={this.handleSubmit}>\r\n            <label>\r\n         <h2>Company Name:</h2>\r\n         <input type='text' value={this.state.companyName} name='companyName' onChange={this.handleInputChange} required></input>\r\n            </label>\r\n            <label>\r\n         <h2>Position:</h2>\r\n         <input type='text' value={this.state.position} name='position' onChange={this.handleInputChange} required></input>\r\n            </label>\r\n            <label>\r\n         <h2>Description of Duties</h2>\r\n         <textarea value={this.state.description} name='description' onChange={this.handleInputChange} className='duty' required></textarea>\r\n            </label>\r\n        <div className='outerBox'>\r\n\r\n         <div className='innerBox'>\r\n            <label>\r\n           <h2>Start date:</h2>\r\n           <input type=\"date\" value={this.state.startDate} name='startDate' onChange={this.handleInputChange} \r\n         min=\"1950-01-01\" max=\"2028-12-31\" required></input>\r\n           </label>\r\n         </div>\r\n\r\n          <div className='innerBox'>\r\n             <label>\r\n           <h2>End date:</h2>\r\n           <input type=\"date\" value={this.state.endDate} name='endDate' onChange={this.handleInputChange}  \r\n           min=\"1950-01-01\" max=\"2028-12-31\" required></input>\r\n             </label>\r\n           </div>\r\n\r\n        </div>\r\n            <button className='submit'>Submit</button>\r\n             </form>\r\n        \r\n    </div>\r\n        )\r\n        }else{\r\n            return(\r\n                <div className='infoContainer'>            \r\n\r\n               <WorkExperienceDisplay\r\n                workArray = {this.state.workArray} \r\n                removeElement={this.removeElement}/>\r\n\r\n            <div className='addButtonContainer'>\r\n                <button className='add' onClick={this.changeAppendingWork}>Add</button>\r\n                <p>Add Experience</p>\r\n                </div>\r\n\r\n          </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Work","import './App.css';\nimport React from 'react';\nimport Header from './components/header';\nimport GeneralForm from './components/generalInformationForm';\nimport EducationForm from './components/educationForm';\nimport WorkExperienceForm from './components/workExperienceForm';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Header/>\n      <GeneralForm/>\n      <EducationForm/>\n      <WorkExperienceForm/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}